{"id":"kJFU","dependencies":[{"name":"C:\\Users\\kenny\\OneDrive\\Documents\\productive_site\\package.json","includedInParent":true,"mtime":1589493629159},{"name":"C:\\Users\\kenny\\OneDrive\\Documents\\productive_site\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1588826493002},{"name":"./toInteger","loc":{"line":1,"column":24},"parent":"C:\\Users\\kenny\\OneDrive\\Documents\\productive_site\\node_modules\\lodash\\isInteger.js","resolved":"C:\\Users\\kenny\\OneDrive\\Documents\\productive_site\\node_modules\\lodash\\toInteger.js"}],"generated":{"js":"var e=require(\"./toInteger\");function r(r){return\"number\"==typeof r&&r==e(r)}module.exports=r;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/lodash/isInteger.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/lodash/isInteger.js","original":{"line":1,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/lodash/isInteger.js","original":{"line":1,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/lodash/isInteger.js","original":{"line":1,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/lodash/isInteger.js","original":{"line":29,"column":0},"generated":{"line":1,"column":29}},{"source":"../node_modules/lodash/isInteger.js","original":{"line":29,"column":0},"generated":{"line":1,"column":38}},{"source":"../node_modules/lodash/isInteger.js","original":{"line":29,"column":0},"generated":{"line":1,"column":40}},{"source":"../node_modules/lodash/isInteger.js","original":{"line":30,"column":0},"generated":{"line":1,"column":43}},{"source":"../node_modules/lodash/isInteger.js","original":{"line":30,"column":0},"generated":{"line":1,"column":49}},{"source":"../node_modules/lodash/isInteger.js","original":{"line":30,"column":0},"generated":{"line":1,"column":66}},{"source":"../node_modules/lodash/isInteger.js","original":{"line":30,"column":0},"generated":{"line":1,"column":69}},{"source":"../node_modules/lodash/isInteger.js","original":{"line":30,"column":0},"generated":{"line":1,"column":72}},{"source":"../node_modules/lodash/isInteger.js","original":{"line":30,"column":0},"generated":{"line":1,"column":74}},{"source":"../node_modules/lodash/isInteger.js","original":{"line":33,"column":0},"generated":{"line":1,"column":77}},{"source":"../node_modules/lodash/isInteger.js","original":{"line":33,"column":0},"generated":{"line":1,"column":84}},{"source":"../node_modules/lodash/isInteger.js","original":{"line":33,"column":0},"generated":{"line":1,"column":92}}],"sources":{"../node_modules/lodash/isInteger.js":"var toInteger = require('./toInteger');\n\n/**\n * Checks if `value` is an integer.\n *\n * **Note:** This method is based on\n * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n * @example\n *\n * _.isInteger(3);\n * // => true\n *\n * _.isInteger(Number.MIN_VALUE);\n * // => false\n *\n * _.isInteger(Infinity);\n * // => false\n *\n * _.isInteger('3');\n * // => false\n */\nfunction isInteger(value) {\n  return typeof value == 'number' && value == toInteger(value);\n}\n\nmodule.exports = isInteger;\n"},"lineCount":null}},"error":null,"hash":"f3d75b59a90b0a4e5760d10e51db5474","cacheData":{"env":{}}}